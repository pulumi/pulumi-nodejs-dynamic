
name: prerelease
on:
  push:
    tags:
      - v*.*.*-**
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  LOCAL_PLAT: linux-amd64
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_API: https://api.pulumi-staging.io
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  IS_PRERELEASE: true
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org
          cache: yarn
          cache-dependency-path: '**/package.json'
      - name: Install yarn
        run: npm install -g yarn
      - name: Lint code
        run: make lint
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
  build-provider:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org
          cache: yarn
          cache-dependency-path: '**/package.json'
      - name: Install yarn
        run: npm install -g yarn
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - name: Build provider
        run: make test_provider provider
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Upload bin
        uses: actions/upload-artifact@v3
        with:
          name: bin
          path: bin
      - name: Tar provider bin
        run: tar -zcf ${{ github.workspace }}/provider.tar.gz -C ${{ github.workspace }}/bin/ .
      - name: Upload provider bin
        uses: actions/upload-artifact@v2
        with:
          name: nodejs-dynamic-provider.tar.gz
          path: ${{ github.workspace }}/provider.tar.gz
      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in building provider
          fields: repo,commit,author,action
          status: ${{ job.status }}
    strategy:
      fail-fast: false
      matrix:
        goversion:
          - 1.17.x
        nodeversion:
          - 16.x
  acceptance-test:
    needs: build-provider
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: https://registry.npmjs.org
      - name: Download bin
        uses: actions/download-artifact@v3
        with:
          name: bin
          path: bin
      - name: Restore bin and avoid rebuilding
        run: |
          chmod +x bin/*
          make provider --touch
      - name: Build SDK
        run: make build_sdk
      - name: Check worktree clean
        run: ./ci-scripts/ci/check-worktree-is-clean
      - name: Compress SDK folder
        run: tar -zcf sdk.tar.gz -C sdk .
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sdk.tar.gz
          path: ${{ github.workspace}}/sdk.tar.gz
      - name: Install gotestfmt
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: haveyoudebuggedit/gotestfmt
      - name: Run tests
        # Tell make to not rebuild the provider bin
        run: make test_sdk
    strategy:
      fail-fast: false
      matrix:
        goversion:
          - 1.17.x
        nodeversion:
          - 16.x
  publish:
    name: publish
    needs: acceptance-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-external-id: upload-pulumi-release
          role-session-name: ${{ env.PROVIDER}}@githubActions
          role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
      - uses: MOZGIII/install-ldid-action@v1
        with:
          tag: v2.1.5-procursus2
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - name: Download provider binary
        uses: actions/download-artifact@v2
        with:
          name: nodejs-dynamic-provider.tar.gz
          path: ${{ github.workspace }}/bin
      - name: Untar provider binaries
        run: tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{ github.workspace
          }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }}/bin -name "pulumi-resource-nodejs-dynamic" -print
          -exec chmod +x {} \;
      - name: Create Provider Binaries
        run: make test_provider dist
      - name: Upload Provider Binaries
        run: aws s3 cp dist s3://get.pulumi.com/releases/plugins/ --recursive
      - name: Create GH Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  publish_sdk:
    name: publish_sdk
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Checkout Scripts Repo
        uses: actions/checkout@v2
        with:
          path: ci-scripts
          repository: pulumi/scripts
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.7.1
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v1.0.1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.goversion }}
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          always-auth: true
          registry-url: https://registry.npmjs.org
          node-version: ${{matrix.nodeversion}}
      - name: Download SDK
        uses: actions/download-artifact@v2
        with:
          name: sdk.tar.gz
          path: ${{ github.workspace}}
      - name: Uncompress SDK
        run: tar -zxf ${{github.workspace}}/sdk.tar.gz -C ${{github.workspace}}/sdk
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        name: Publish SDK
        run: ./scripts/publish_packages.sh
    strategy:
      fail-fast: false
      matrix:
        goversion:
          - 1.17.x
        nodeversion:
          - 16.x
